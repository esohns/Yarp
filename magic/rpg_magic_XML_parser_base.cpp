// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#include "rpg_magic_XML_parser_base.h"

// RPG_Magic_School_Type_pimpl
//

void RPG_Magic_School_Type_pimpl::
pre ()
{
}

RPG_Magic_School RPG_Magic_School_Type_pimpl::
post_RPG_Magic_School_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Magic_Domain_Type_pimpl
//

void RPG_Magic_Domain_Type_pimpl::
pre ()
{
}

RPG_Magic_Domain RPG_Magic_Domain_Type_pimpl::
post_RPG_Magic_Domain_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Magic_Spell_Type_pimpl
//

void RPG_Magic_Spell_Type_pimpl::
pre ()
{
}

RPG_Magic_Spell RPG_Magic_Spell_Type_pimpl::
post_RPG_Magic_Spell_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Magic_AbilityClass_Type_pimpl
//

void RPG_Magic_AbilityClass_Type_pimpl::
pre ()
{
}

RPG_Magic_AbilityClass RPG_Magic_AbilityClass_Type_pimpl::
post_RPG_Magic_AbilityClass_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Magic_AbilityType_Type_pimpl
//

void RPG_Magic_AbilityType_Type_pimpl::
pre ()
{
}

RPG_Magic_AbilityType RPG_Magic_AbilityType_Type_pimpl::
post_RPG_Magic_AbilityType_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Magic_SpellProperties_Type_pimpl
//

void RPG_Magic_SpellProperties_Type_pimpl::
pre ()
{
}

void RPG_Magic_SpellProperties_Type_pimpl::
type (const RPG_Magic_Spell& type)
{
  // TODO
  //
}

void RPG_Magic_SpellProperties_Type_pimpl::
casterLevel (unsigned char casterLevel)
{
  // TODO
  //
}

void RPG_Magic_SpellProperties_Type_pimpl::
save (const RPG_Common_SavingThrowCheck& save)
{
  // TODO
  //
}

RPG_Magic_SpellProperties RPG_Magic_SpellProperties_Type_pimpl::
post_RPG_Magic_SpellProperties_Type ()
{
  // TODO
  //
  // return ... ;
}

