// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#ifndef CXX_____RPG_COMMON_XML_PARSER_BASE_H
#define CXX_____RPG_COMMON_XML_PARSER_BASE_H

#include "rpg_common_XML_types.h"

class RPG_Common_Attribute_Type_pimpl: public virtual RPG_Common_Attribute_Type_pskel,
  public ::xml_schema::string_pimpl
{
  public:
  virtual void
  pre ();

  virtual RPG_Common_Attribute
  post_RPG_Common_Attribute_Type ();
};

class RPG_Common_PhysicalDamageType_Type_pimpl: public virtual RPG_Common_PhysicalDamageType_Type_pskel,
  public ::xml_schema::string_pimpl
{
  public:
  virtual void
  pre ();

  virtual RPG_Common_PhysicalDamageType
  post_RPG_Common_PhysicalDamageType_Type ();
};

class RPG_Common_CheckType_Type_pimpl: public virtual RPG_Common_CheckType_Type_pskel,
  public ::xml_schema::string_pimpl
{
  public:
  virtual void
  pre ();

  virtual RPG_Common_CheckType
  post_RPG_Common_CheckType_Type ();
};

class RPG_Common_SavingThrow_Type_pimpl: public virtual RPG_Common_SavingThrow_Type_pskel,
  public ::xml_schema::string_pimpl
{
  public:
  virtual void
  pre ();

  virtual RPG_Common_SavingThrow
  post_RPG_Common_SavingThrow_Type ();
};

class RPG_Common_BaseCheckTypeUnion_Type_pimpl: public virtual RPG_Common_BaseCheckTypeUnion_Type_pskel
{
  public:
  virtual void
  pre ();

  virtual void
  _characters (const ::xml_schema::ro_string&);

  virtual RPG_Common_BaseCheckTypeUnion
  post_RPG_Common_BaseCheckTypeUnion_Type ();
};

class RPG_Common_SaveReductionType_Type_pimpl: public virtual RPG_Common_SaveReductionType_Type_pskel,
  public ::xml_schema::string_pimpl
{
  public:
  virtual void
  pre ();

  virtual RPG_Common_SaveReductionType
  post_RPG_Common_SaveReductionType_Type ();
};

class RPG_Common_SavingThrowCheck_Type_pimpl: public virtual RPG_Common_SavingThrowCheck_Type_pskel
{
  public:
  virtual void
  pre ();

  virtual void
  type (const RPG_Common_SavingThrow&);

  virtual void
  attribute (const RPG_Common_Attribute&);

  virtual void
  difficultyClass (unsigned char);

  virtual void
  reduction (const RPG_Common_SaveReductionType&);

  virtual RPG_Common_SavingThrowCheck
  post_RPG_Common_SavingThrowCheck_Type ();
};

class RPG_Common_Usage_Type_pimpl: public virtual RPG_Common_Usage_Type_pskel
{
  public:
  virtual void
  pre ();

  virtual void
  numUses (unsigned char);

  virtual void
  period (unsigned int);

  virtual RPG_Common_Usage
  post_RPG_Common_Usage_Type ();
};

class RPG_Common_Duration_Type_pimpl: public virtual RPG_Common_Duration_Type_pskel
{
  public:
  virtual void
  pre ();

  virtual void
  activationPeriod (unsigned short);

  virtual void
  interval (unsigned short);

  virtual void
  totalDuration (unsigned short);

  virtual RPG_Common_Duration
  post_RPG_Common_Duration_Type ();
};

#endif // CXX_____RPG_COMMON_XML_PARSER_BASE_H
