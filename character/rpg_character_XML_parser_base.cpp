// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#include "rpg_character_XML_parser_base.h"

// RPG_Character_Gender_Type_pimpl
//

void RPG_Character_Gender_Type_pimpl::
pre ()
{
}

RPG_Character_Gender RPG_Character_Gender_Type_pimpl::
post_RPG_Character_Gender_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_Race_Type_pimpl
//

void RPG_Character_Race_Type_pimpl::
pre ()
{
}

RPG_Character_Race RPG_Character_Race_Type_pimpl::
post_RPG_Character_Race_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_MetaClass_Type_pimpl
//

void RPG_Character_MetaClass_Type_pimpl::
pre ()
{
}

RPG_Character_MetaClass RPG_Character_MetaClass_Type_pimpl::
post_RPG_Character_MetaClass_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_SubClass_Type_pimpl
//

void RPG_Character_SubClass_Type_pimpl::
pre ()
{
}

RPG_Character_SubClass RPG_Character_SubClass_Type_pimpl::
post_RPG_Character_SubClass_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_Class_Type_pimpl
//

void RPG_Character_Class_Type_pimpl::
pre ()
{
}

void RPG_Character_Class_Type_pimpl::
metaClass (const RPG_Character_MetaClass& metaClass)
{
  // TODO
  //
}

void RPG_Character_Class_Type_pimpl::
subClass (const RPG_Character_SubClass& subClass)
{
  // TODO
  //
}

RPG_Character_Class RPG_Character_Class_Type_pimpl::
post_RPG_Character_Class_Type ()
{
  // TODO
  //
  // return ... ;
}

// RPG_Character_Condition_Type_pimpl
//

void RPG_Character_Condition_Type_pimpl::
pre ()
{
}

RPG_Character_Condition RPG_Character_Condition_Type_pimpl::
post_RPG_Character_Condition_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_Ability_Type_pimpl
//

void RPG_Character_Ability_Type_pimpl::
pre ()
{
}

RPG_Character_Ability RPG_Character_Ability_Type_pimpl::
post_RPG_Character_Ability_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_Size_Type_pimpl
//

void RPG_Character_Size_Type_pimpl::
pre ()
{
}

RPG_Character_Size RPG_Character_Size_Type_pimpl::
post_RPG_Character_Size_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_Attributes_Type_pimpl
//

void RPG_Character_Attributes_Type_pimpl::
pre ()
{
}

void RPG_Character_Attributes_Type_pimpl::
strength (unsigned char strength)
{
  // TODO
  //
}

void RPG_Character_Attributes_Type_pimpl::
dexterity (unsigned char dexterity)
{
  // TODO
  //
}

void RPG_Character_Attributes_Type_pimpl::
constitution (unsigned char constitution)
{
  // TODO
  //
}

void RPG_Character_Attributes_Type_pimpl::
intelligence (unsigned char intelligence)
{
  // TODO
  //
}

void RPG_Character_Attributes_Type_pimpl::
wisdom (unsigned char wisdom)
{
  // TODO
  //
}

void RPG_Character_Attributes_Type_pimpl::
charisma (unsigned char charisma)
{
  // TODO
  //
}

RPG_Character_Attributes RPG_Character_Attributes_Type_pimpl::
post_RPG_Character_Attributes_Type ()
{
  // TODO
  //
  // return ... ;
}

// RPG_Character_Skill_Type_pimpl
//

void RPG_Character_Skill_Type_pimpl::
pre ()
{
}

RPG_Character_Skill RPG_Character_Skill_Type_pimpl::
post_RPG_Character_Skill_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_SkillValue_Type_pimpl
//

void RPG_Character_SkillValue_Type_pimpl::
pre ()
{
}

void RPG_Character_SkillValue_Type_pimpl::
skill (const RPG_Character_Skill& skill)
{
  // TODO
  //
}

void RPG_Character_SkillValue_Type_pimpl::
rank (signed char rank)
{
  // TODO
  //
}

RPG_Character_SkillValue RPG_Character_SkillValue_Type_pimpl::
post_RPG_Character_SkillValue_Type ()
{
  // TODO
  //
  // return ... ;
}

// RPG_Character_Skills_Type_pimpl
//

void RPG_Character_Skills_Type_pimpl::
pre ()
{
}

void RPG_Character_Skills_Type_pimpl::
skill (const RPG_Character_SkillValue& skill)
{
  // TODO
  //
}

RPG_Character_Skills RPG_Character_Skills_Type_pimpl::
post_RPG_Character_Skills_Type ()
{
  // TODO
  //
  // return ... ;
}

// RPG_Character_Feat_Type_pimpl
//

void RPG_Character_Feat_Type_pimpl::
pre ()
{
}

RPG_Character_Feat RPG_Character_Feat_Type_pimpl::
post_RPG_Character_Feat_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_Feats_Type_pimpl
//

void RPG_Character_Feats_Type_pimpl::
pre ()
{
}

void RPG_Character_Feats_Type_pimpl::
feat (const RPG_Character_Feat& feat)
{
  // TODO
  //
}

RPG_Character_Feats RPG_Character_Feats_Type_pimpl::
post_RPG_Character_Feats_Type ()
{
  // TODO
  //
  // return ... ;
}

// RPG_Character_Plane_Type_pimpl
//

void RPG_Character_Plane_Type_pimpl::
pre ()
{
}

void RPG_Character_Plane_Type_pimpl::
post_RPG_Character_Plane_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
}

// RPG_Character_Terrain_Type_pimpl
//

void RPG_Character_Terrain_Type_pimpl::
pre ()
{
}

RPG_Character_Terrain RPG_Character_Terrain_Type_pimpl::
post_RPG_Character_Terrain_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_Climate_Type_pimpl
//

void RPG_Character_Climate_Type_pimpl::
pre ()
{
}

RPG_Character_Climate RPG_Character_Climate_Type_pimpl::
post_RPG_Character_Climate_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_Environment_Type_pimpl
//

void RPG_Character_Environment_Type_pimpl::
pre ()
{
}

void RPG_Character_Environment_Type_pimpl::
terrain (const RPG_Character_Terrain& terrain)
{
  // TODO
  //
}

void RPG_Character_Environment_Type_pimpl::
climate (const RPG_Character_Climate& climate)
{
  // TODO
  //
}

RPG_Character_Environment RPG_Character_Environment_Type_pimpl::
post_RPG_Character_Environment_Type ()
{
  // TODO
  //
  // return ... ;
}

// RPG_Character_AlignmentCivic_Type_pimpl
//

void RPG_Character_AlignmentCivic_Type_pimpl::
pre ()
{
}

RPG_Character_AlignmentCivic RPG_Character_AlignmentCivic_Type_pimpl::
post_RPG_Character_AlignmentCivic_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_AlignmentEthic_Type_pimpl
//

void RPG_Character_AlignmentEthic_Type_pimpl::
pre ()
{
}

RPG_Character_AlignmentEthic RPG_Character_AlignmentEthic_Type_pimpl::
post_RPG_Character_AlignmentEthic_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

// RPG_Character_Alignment_Type_pimpl
//

void RPG_Character_Alignment_Type_pimpl::
pre ()
{
}

void RPG_Character_Alignment_Type_pimpl::
civic (const RPG_Character_AlignmentCivic& civic)
{
  // TODO
  //
}

void RPG_Character_Alignment_Type_pimpl::
ethic (const RPG_Character_AlignmentEthic& ethic)
{
  // TODO
  //
}

RPG_Character_Alignment RPG_Character_Alignment_Type_pimpl::
post_RPG_Character_Alignment_Type ()
{
  // TODO
  //
  // return ... ;
}

// RPG_Character_EquipmentSlot_Type_pimpl
//

void RPG_Character_EquipmentSlot_Type_pimpl::
pre ()
{
}

RPG_Character_EquipmentSlot RPG_Character_EquipmentSlot_Type_pimpl::
post_RPG_Character_EquipmentSlot_Type ()
{
  const ::std::string& v (post_string ());

  // TODO
  //
  // return ... ;
}

